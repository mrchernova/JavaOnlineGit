/**
 * 9. Задана матрица неотрицательных чисел.
 * Посчитать сумму элементов в каждом столбце.
 * Определить, какой столбец содержит максимальную сумму
 */

package by.epam.jonline.module2.matrix9;

public class Matrix9 {

    static int max = 0;
    static int sum = 0;
    static int jj = 0;
    int[] a = new int[10];

    public static void main(String[] args) {

        int n = 2;
        int m = 10;
        int[][] matrix = new int[n][m];


        initMatrix(matrix);

        System.out.println("Матрица " + n + "x" + m);
        printMatrix(matrix);


        System.out.println("\nСумма элементов в каждом столбце: ");
        sumInAllCollumns(matrix, m);

        System.out.println("\nМаксимальная сумма элементов " + max + " находится в столбце " + jj);

        // вызвать еще раз метод и вывести все столбцы с максимальной суммой
        //завести масив с суммой элементов
    }


    public static void initMatrix(int[][] matrix) {

        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                matrix[i][j] = (int) (Math.random() * 10);
            }
        }
    }

    public static void printMatrix(int[][] matrix) {

        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.format("%2s", matrix[i][j]);
            }
            System.out.println();
        }
    }

    // выводит все суммы
    public static void sumInAllCollumns(int[][] matrix, int m) {
        int j = 0;
        for (int i = 0; i < m; i++) {
            int x = sumInEachCollumn(matrix, j, m);
            sumMax(x, j);
            j++;
            System.out.println(" -> сумма " + j + " столбца");
        }

    }

    // считает сумму одного столбца
    public static int sumInEachCollumn(int[][] matrix, int onej, int m) {
        sum = 0;
        int[] a = new int[m];

        for (int i = 0; i < matrix.length; i++) {
            sum = sum + matrix[i][onej];        // onej - столбец
        }
        a[onej] = sum;      // new array for output
        System.out.print(sum);
        return sum;
    }

    // находит максимальную сумму столбцов
    public static void sumMax(int sum, int j) {
       
        if (sum >= max) {
            max = sum;
            jj = ++j;
            
        }
        
    }

}

